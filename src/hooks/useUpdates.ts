import { useEffect, useState } from "react";
import { pushToast } from "../helpers/toastHelpers";
import { Toast } from "../types";

export function useUpdates(setToasts: React.Dispatch<React.SetStateAction<Toast[]>>) {
  const [updateReady, setUpdateReady] = useState(false);

  useEffect(() => {
    window.studentApi.onUpdate?.("update:checking", () => {
      pushToast(setToasts, "üîÑ V√©rification des mises √† jour...");
      setUpdateReady(false);
    });
    window.studentApi.onUpdate?.("update:available", () => {
      pushToast(setToasts, "‚¨áÔ∏è Mise √† jour disponible, t√©l√©chargement...");
      setUpdateReady(false);
    });
    window.studentApi.onUpdate?.("update:none", () => {
      pushToast(setToasts, "‚úÖ Aucune mise √† jour disponible");
      setUpdateReady(false);
    });
    window.studentApi.onUpdate?.("update:downloaded", () => {
      pushToast(setToasts, "üì¶ Mise √† jour pr√™te √† installer");
      setUpdateReady(true);
    });
    window.studentApi.onUpdate?.("update:error", (_evt, err) => {
      pushToast(setToasts, "‚ùå Erreur de mise √† jour: " + err);
      setUpdateReady(false);
    });
  }, [setToasts]);

  return updateReady;
}
